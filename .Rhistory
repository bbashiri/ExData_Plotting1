b <- best("MD", "heart attack")
b
best("TX", "heart failure")
best("TX", "heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
?ave
?sort
source('C:/Data Science Coursera/R Programming/best.R')
source('C:/Data Science Coursera/R Programming/rankhospital.R')
source('C:/Data Science Coursera/R Programming/rankhospital.R')
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
b
?order
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
b
b[1]
b[1,1]
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
b
b[1]
source('C:/Data Science Coursera/R Programming/rankhospital.R')
source('C:/Data Science Coursera/R Programming/rankhospital.R')
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
b
b <- rankhospital("tx", "heart failure")
head(b)
b
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("tx", "heart failure")
b
b <- rankhospital("MD", "heart attack")
b
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
b
source('C:/Data Science Coursera/R Programming/rankhospital.R')
b <- rankhospital("MD", "heart attack")
b
source('C:/Data Science Coursera/R Programming/rankhospital.R')
source('C:/Data Science Coursera/R Programming/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('C:/Data Science Coursera/R Programming/rankhospital.R')
submit()
submit()
submit()
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
data <- read.csv('\\s20fs01\\users\\BashirBG\\Documents\\Data Warehouse\\Data Sources\\DIM_DRG.csv')
data <- read.csv('\\\s20fs01\\users\\BashirBG\\Documents\\Data Warehouse\\Data Sources\\DIM_DRG.csv')
source('F:/Budget/read_labor.R')
r <- readFiles()
write.csv(r, 'f:\\Budget\\files.csv')
library(RPosrgreSQL)
library(RPostgreSQL)
source('F:/Budget/read_labor.R')
r <- readFiles()
write.csv(r, 'f:\\Budget\\files.csv')
source('F:/Budget/read_labor.R')
source('F:/Budget/read_labor.R')
r <- readFiles()
write.csv(r, 'f:\\Budget\\files.csv')
source('F:/Budget/read_labor.R')
r <- readFiles()
write.csv(r, 'f:\\Budget\\files.csv')
write.csv(r, 'f:\\Budget\\files.csv')
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
source('F:/Budget/read_labor.R')
r <- readFiles()
source('F:/Budget/read_labor.R')
head(r)
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
write.csv(r, 'f:\\Budget\\files.csv')
source('F:/Budget/read_labor.R')
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
class(r)
r[1]
r[,1]
write.csv(r, 'f:\\Budget\\files.csv')
r$x
source('F:/Budget/read_labor.R')
r <- readFiles()
source('F:/Budget/read_labor.R')
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
source('F:/Budget/read_labor.R')
r <- readFiles()
head(r)
write.csv(r, 'f:\\Budget\\files.csv')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
r <- readFiles()
head(r)
class(r)
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
head(r)
source('F:/Budget/find_files.R')
r <- readFiles()
names(r)
source('F:/Budget/find_files.R')
r <- readFiles()
names(r)
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
head(r)
source('F:/Budget/find_files.R')
r <- readFiles()
head(r)
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
?in
source('F:/Budget/find_files.R')
r <- readFiles()
head(r)
r
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
r <- readFiles()
r
source('F:/Budget/find_files.R')
r <- readFiles()
r
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
r <- readFiles()
r
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
head(r)
r <- readFiles
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
r <- readFiles()
library(XML)
tables <- readHTMLTable("http://biostat.jhsph.edu/~jleek/contact.html
")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
tables <- readHTMLTable(url)
head(tables)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
head(n.rows)
n.rows
tables
w <- readLines(url)
head(w)
nchar(w[c(10,20,30,100)])
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", 'wksst8110.for' )
f <- read.fwf('wksst8110.for')
f <- read.fwf('wksst8110.for', "03JAN1990     ")
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
?download.file
library(httr)
oauth_endpoints('github')
myapp <- oauth_app('github', '56b637a5baffac62cad9')
github_token <- oauth2.0_token(oauth_endpooints('github'), myapp)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
myapp <- oauth_app('github', 'e5873d322763d018b45e')
myapp <- oauth_app('e5873d322763d018b45e', '7bfbd3e4da62ce35d13df3f1a7b1191e04593f59')
github_token <- oauth2.0_token(oauth_endpoints('e5873d322763d018b45e'), myapp)
?ouath_app
library(httr)
??ouath_app
?oauth_app
myapp <- oauth_app('quizz1', 'e5873d322763d018b45e')
myapp <- oauth_app('quizz1', 'e5873d322763d018b45e', '7bfbd3e4da62ce35d13df3f1a7b1191e04593f59')
github_token <- oauth2.0_token(oauth_endpoints('e5873d322763d018b45e'), myapp)
github_token <- oauth2.0_token(oauth_endpoints('quizz1'), myapp)
?oauth2.0_token
?oauth_endpoints
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
myapp <- oauth_app('github', 'e5873d322763d018b45e', '7bfbd3e4da62ce35d13df3f1a7b1191e04593f59')
github_token <- oauth2.0_token(oauth_endpoints('github'), myapp)
f <- read.fwf('wksst8110.for', width = c(9,8,8,8,8))
head(f)
?read.fwf
f <- read.fwf('wksst8110.for', width = c(9,8,8,8,8), header = TRUE)
f <- read.fwf('wksst8110.for', widths = c(9,8,8,8,8), header = TRUE)
f <- read.fwf('wksst8110.for', widths = c(9,8,8,8,8), header = TRUE, skip = 2)
f <- read.fwf('wksst8110.for', widths = c(8,8,8,8), header = TRUE, skip = 2)
f <- read.fwf('wksst8110.for', widths = c(8,8,8,8), header = TRUE, skip = 1)
f <- read.fwf('wksst8110.for', widths = c(9,8,8,8,8), header = TRUE, skip = 1)
f <- read.fwf('wksst8110.for', widths = c(9,8,8,8,8),  skip = 2)
head(f)
f <- read.fwf('wksst8110.for', widths = c(9,8,8,8,8),  skip = 5)
head(f)
f <- read.fwf('wksst8110.for', widths = c(9,8,8,8,8),  skip = 4)
f[,4]
sum(f[,4])
as.numeric(f[,4])
sum(as.numeric(f[,4]))
sum(as.numeric(f[,3]))
f <- read.fwf('wksst8110.for', widths = c(9,3,2,3,2,3,2),  skip = 4)
head(f)
f <- read.fwf('wksst8110.for', widths = c(9,3,2,3,2,3,2),  skip = 4, sep = c(\t, '-'))
f <- read.fwf('wksst8110.for', widths = c(9,3,2,3,2,3,2),  skip = 4, sep = c('\t', '-'))
head(f)
f <- read.fwf('wksst8110.for',  skip = 4, sep = c('\t', '-'))
f <- read.fwf('wksst8110.for',  width = 4, skip = 4, sep = c('\t', '-'))
head(f)
f <- read.fwf('wksst8110.for',  width = c(9,3,2), skip = 4, sep = c('\t', '-'))
head(f)
source('F:/Budget/find_files.R')
r <- readFiles()
r
source('F:/Budget/find_files.R')
r <- readFiles()
r <- readFiles()
r
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
source('F:/Budget/find_files.R')
r <- readFiles()
r <- readFiles()
r
source('F:/Budget/find_files.R')
source('F:/Budget/find_files.R')
r <- readFiles()
source('//s20fs01/users/BashirBG/Documents/Reports/HCAHPS/tidy_survey_annual.R')
source('//s20fs01/users/BashirBG/Documents/Reports/HCAHPS/tidy_survey_annual.R')
source('//s20fs01/users/BashirBG/Documents/Reports/HCAHPS/tidy_survey_annual.R')
r <- f()
data <- tbl_df(read.csv('F://R//stoplight_annual.csv'))
data
names(data) <- tolower(names(data))
names(data) <- gsub('f.r.howard', 'hmh', names(data))
names(data) <- gsub('sh.cl', 'shcl', names(data))
names(data) <- gsub('sh.nv', 'shnv', names(data))
names(data) <- gsub('northern.california.network', 'ncn', names(data))
names(data)
benchmarks <- select(data, question.core:calendar..prior.year.pr)
benchmarks
d1 <- select(data, contains('question'), contains('score'), contains('size'), contains('pr'))
d2 <-  gather(d1, class, score, contains('score'))
d2
d3 <- select(d2, question.core, question.text, class, score)
d3
d4 <- mutate(d3, class = gsub(pattern = 'qtr\\.', replacement ='', class))
d4
tail(s4)
tail(d4)
d4 <- mutate(d3, facility_quarter_year = str_extract(class, '(shnv|shcl|uvmc|hmh|ncn)\\.201[0-9]'))
d4 <- mutate(d3, facility_year = str_extract(class, '(shnv|shcl|uvmc|hmh|ncn)\\.201[0-9]'))
tail(d4)
d5 <- filter(d4, !is.na(facility_year))
d6 <- separate(d5, col = facility_quarter_year, into = c('facility', 'year'), remove = TRUE, convert = TRUE)
d6 <- separate(d5, col = facility_year, into = c('facility', 'year'), remove = TRUE, convert = TRUE)
d6
d7 <- mutate(d6, facility = toupper(facility)) %>%
d7 <- mutate(d6, facility = toupper(facility))
d8 <- mutate(d7, date = as.Date(year))
d8
library(zoo)
d8 <- mutate(d7, date = as.Date(as.year(year))
)
d8 <- mutate(d7, date = as.Date(as.year(year)))
?zoo
d8 <- mutate(d7, date = as.Date(ISOdate(year, 1, 1)))
d8
d9 <- inner_join(d8, benchmarks)
d10 <- select(d9, question.text, date, facility:year, contains('score'))
d10
source('//s20fs01/users/BashirBG/Documents/Reports/HCAHPS/tidy_survey_annual.R')
d <- f()
library(datasets)
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
x < rnorm(100)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
par(mar = c(2, 2, 2, 2))
par(mar = c(4, 4, 2, 2))
plot(x, y, pch = 20)
plot(x, y, pch = 4)
plot(x, y, pch = 3)
pchShow()
plot(x, y, pch = 20)
title("scatter")
text(-2, -2, "l")
text(-2, -2, "label")
fit <- lm(y~x)
abline(fit)
abline(fit, lwd = 3)
abline(fit, lwd = 3, col = "blue")
plot(x, y, xlab = "G", pch = 20)
legend("topright", legend = "LOS")
z <- rpois(100, 2)
par(mfrow = c(2, 1))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
?Devices
dev.cur()
with(faithful, plot(eruptions, waiting))
setwd("C:/Data Science Coursera/Exploratory Data Analysis")
?read.table
data <- read.table('household_power_consumption.txt', header = TRUE, as.is = FALSE)
data <- tbl_df(data)
library(dplyr)
data <- tbl_df(data)
data
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, as.is = FALSE)
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, as.is = TRUE)
data <- tbl_df(data)
data
library(lubridate)
install.packages('lubridate')
library(lubridate)
dt <- paste(data$Date[1:10], data$Time[1:10])
dt
d <- dmy_hms(dt)
d
data <- mutate(data, date_time = dmy_hms(paste(Date, Time)))
data
select(data, date_time)
data
data <- mutate(data, Date = dmy(Date))
data
power <- filter(data, Date >= '2007-02-01', Date <= '2007-02-02')
power
levels(as.factor(power@Date))
levels(as.factor(power$Date))
power <- filter(data, Date > '2007-01-31', Date <= '2007-02-02')
levels(as.factor(power$Date))
hist(power$Global_active_power)
power$Global_active_power
data <- filter(data, Date > '2007-01-31', Date <= '2007-02-02')
data
hist(as.numeric(power$Global_active_power))
par( mfrow= c(1,1))
hist(as.numeric(power$Global_active_power))
hist(as.numeric(power$Global_active_power), col = "red")
hist(as.numeric(power$Global_active_power), col = "red", xlab = "Global Active Power (kilowatts")
hist(as.numeric(power$Global_active_power), col = "red", xlab = "Global Active Power (kilowatts)")
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, stringAsFactor = FALSE)
?read.table
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, stringsAsFactors = FALSE)
class(cols(data))
class(col(data))
class(data[names(data)])
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
class(data$Global_active_power)
names(data)
rep('numeric', 5)
c(rep('character', 2), rep('numeric', 2))
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(rep('character', 2), rep('numeric', 7)))
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(rep('character', 2), rep('numeric', 7)), numerals = "warn.loss")
data <- read.table('household_power_consumption.txt', sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(rep('character', 2), rep('numeric', 7)), na.strings = '?')
data <- tbl_df(data)
data
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
rm(list = ls())
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
data
plot(data$Global_active_power, data_time)
names(data)
plot(data$Global_active_power, date_time)
plot(data$Global_active_power, data$date_time)
plot(data$date_time, data$Global_active_power)
lines(data$date_time, data$Global_active_power)
plot(data$date_time, data$Global_active_power, type = "o")
plot(data$date_time, data$Global_active_power, col = "blue")
lines(data$date_time, data$Global_active_power)
plot(data$date_time, data$Global_active_power, type = "l")
plot(data$date_time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts) ", xlab = "")
lines(data$date_time, data$Sub_metering_1, col = "red")
lines(data$date_time, data$Sub_metering_1, col = "red")
plot(data$date_time, data$Sub_metering_1, col = "red", type = "l")
plot(data$date_time, data$Sub_metering_1, col = "black", type = "l")
plot(data$date_time, data$Sub_metering_2, col = "red", type = "l")
plot(data$date_time, data$Sub_metering_1, col = "black", type = "l")
lines(data$date_time, data$Sub_metering_2, col = "red")
lines(data$date_time, data$Sub_metering_3, col = "blue")
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
legend("topright", "Sub_metering_1", col = "black")
?legend
legend("topright", "Sub_metering_1", col = "black")
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = "black")
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue")
)
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"), pch = "l")
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"), pch = "0")
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"), pch = 0)
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"), pch = 1)
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"), pch = l)
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), col = c("black", "red", "blue"), pch = 4)
legend("topright", c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
lty = c(1,1)
lty = c(1,1,1)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
lty = c(1,1,1)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1, 1, 1))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1, 1, 1), col = c("black", "red", "blue"))
plot(data$date_time, data$Global_reactive_power, type = "l", ylab = "Global Active Power (kilowatts) ", xlab = "")
plot(data$date_time, data$Global_reactive_power, type = "l",  xlab = "")
plot(data$date_time, select(data, Global_reactive_power), type = "l",  xlab = "")
select(data, Global_reactive_power)
plot(select(data, date_time), select(data, Global_reactive_power), type = "l",  xlab = "")
plot(data$date_time, data$Global_reactive_power, type = "l")
class(data$date_time)
class(select(data, date_time))
plot(data$date_time, data[, Global_reactive_power], type = "l")
data[, Global_reactive_power]
data[, col = Global_reactive_power]
data[, 3]
plot(data$date_time, data[, 3], type = "l")
plot(data$date_time, data[, 4], type = "l")
plot(data$date_time, data$Global_reactive_power, type = "l")
plot(data$date_time, data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_active_power")
plot(data$date_time, data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_active_power")
plot(data$date_time, data$Voltage, type = "l", xlab = "datetime", ylab = "Global_active_power")
Voltage
plot(data$date_time, data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
?par
par(mfrow = c(2, 2))
plot(data$date_time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts) ", xlab = "")
plot(data$date_time, data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(data$date_time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts) ", xlab = "")
plot(data$date_time, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts) ", xlab = "")
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
?mar
?par
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
dev.copy(png, 'test.png')
dev.off
dev.off()
source('C:/Data Science Coursera/Exploratory Data Analysis/ExData_Plotting1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot1.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot2.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot3.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot4.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot4.R')
source('C:/Data Science Coursera/Exploratory Data Analysis/plot4.R')
